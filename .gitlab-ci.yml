# Automation Build for AndroidStudio Projects.
# Based on Ivy structure this pipeline yml is configured.
# Below configurations are based on build server setup

#Option variables based on the project SDK
#variables:
#  ANDROID_COMPILE_SDK: "25"
#  ANDROID_BUILD_TOOLS: "24.0.0"
#  ANDROID_SDK_TOOLS: "24.4.1"

before_script:

#Build Server SDK path Locations

  - export ANDROID_HOME=/home/nadmin/Android/Sdk
  - export PATH=$PATH:=/home/nadmin/Android/Sdk/platform-tools/
  - chmod +x ./gradlew
 
# KeyStore path for Signed Apk generation
 
  - export keystorepath="/home/nadmin/Android/keystore/ivy.keystore"
  - export keyalias="envisionmobility"
  - export googleapikey="AIzaSyBQucltx5i10fqfxaFQNpRb6igGsnmdk0Q"
  - export keystoreusername="envision"
  - export keystorepassword="envision**321"

# Userdefined Variables for output path folder creation
  
  - export commitid=$(git rev-list --count HEAD)
  - export shaid=$(git rev-parse HEAD)
  - echo ${CI_PROJECT_NAME}_${CI_COMMIT_REF_NAME}_${commitid}_${CI_COMMIT_SHA:0:8}
  
after_script:
 
#GitLab runner path details

  - export build_path="/home/gitlab-runner/builds/d752cb9d/0/IvyProjects"
  - export source_path="ivycpg/build/outputs/apk/release"
  - export output_path="/opt/buildoutputs"
  - export commitid=$(git rev-list --count HEAD)
  - cd "${output_path}"
  - mkdir -p "${CI_PROJECT_NAME}"_"${CI_COMMIT_REF_NAME}"
# - cd "${CI_PROJECT_NAME}"_"${CI_COMMIT_REF_NAME}"
# - mkdir -p "${CI_PROJECT_NAME}"_"${CI_COMMIT_REF_NAME}"_"${commitid}"_"${CI_COMMIT_SHA:0:8}"
# - cp $build_path/$CI_PROJECT_NAME/$source_path/ivycpg-release.apk $output_path/${CI_PROJECT_NAME}_${CI_COMMIT_REF_NAME}/${CI_PROJECT_NAME}_${CI_COMMIT_REF_NAME}_${commitid}_${CI_COMMIT_SHA:0:8}/ivycpg-release.apk
# - cp $build_path/$CI_PROJECT_NAME/$source_path/* $output_path/${CI_PROJECT_NAME}_${CI_COMMIT_REF_NAME}/${CI_PROJECT_NAME}_${CI_COMMIT_REF_NAME}_${commitid}_${CI_COMMIT_SHA:0:8}/
  - cd $build_path/$CI_PROJECT_NAME/$source_path
# - zip -r $output_path/${CI_PROJECT_NAME}_${CI_COMMIT_REF_NAME}/${CI_PROJECT_NAME}_${CI_COMMIT_REF_NAME}_${commitid}_${CI_COMMIT_SHA:0:8}.zip /*
  - zip -r $output_path/${CI_PROJECT_NAME}_${CI_COMMIT_REF_NAME}/${CI_PROJECT_NAME}_${CI_COMMIT_REF_NAME}_${commitid}_${CI_COMMIT_SHA:0:8}.zip ivycpg-release.apk
# - mkdir -p "${output_path}"/"${CI_PROJECT_NAME}"_"${CI_COMMIT_REF_NAME}"/"${CI_PROJECT_NAME}"_"${CI_COMMIT_REF_NAME}"_"${commitid}"_"${CI_COMMIT_SHA:0:8}"
# - (if [ "$(bin/goimports -d src/smarpshare/)" == "" ]; then echo "Good format"; else echo "Bad format"; exit 33; fi);
# - (if [ -d "${output_path}"/"${CI_PROJECT_NAME}"_"${CI_COMMIT_REF_NAME}"/"${CI_PROJECT_NAME}"_"${CI_COMMIT_REF_NAME}"_"${commitid}"_"${CI_COMMIT_SHA:0:8}")" == ""]; then mkdir -p "${output_path}"/"${CI_PROJECT_NAME}"_"${CI_COMMIT_REF_NAME}"/"${CI_PROJECT_NAME}"_"${CI_COMMIT_REF_NAME}"_"${commitid}"_"${CI_COMMIT_SHA:0:8}"; else echo "Folder Exist"; exit 33; fi);
# - if [ -d ""${output_path}"/"${CI_PROJECT_NAME}"_"${CI_COMMIT_REF_NAME}"/"${CI_PROJECT_NAME}"_"${CI_COMMIT_REF_NAME}"_"${commitid}"_"${CI_COMMIT_SHA:0:8}"" ]; 
#  then 
#  echo "Directory DB_handouts found" 
#  else 
#  mkdir -m -p "${output_path}"/"${CI_PROJECT_NAME}"_"${CI_COMMIT_REF_NAME}"/"${CI_PROJECT_NAME}"_"${CI_COMMIT_REF_NAME}"_"${commitid}"_"${CI_COMMIT_SHA:0:8}" 
#  fi
# - if [ -d ""${output_path}"/"${CI_PROJECT_NAME}"_"${CI_COMMIT_REF_NAME}"/"${CI_PROJECT_NAME}"_"${CI_COMMIT_REF_NAME}"_"${commitid}"_"${CI_COMMIT_SHA:0:8}"" ]; then echo "Directory DB_handouts found" else mkdir -p "${output_path}"/"${CI_PROJECT_NAME}"_"${CI_COMMIT_REF_NAME}"/"${CI_PROJECT_NAME}"_"${CI_COMMIT_REF_NAME}"_"${commitid}"_"${CI_COMMIT_SHA:0:8}" fi
 

stages:
  - build

build:
  stage: build
  script:
    - ./gradlew clean 
    - ./gradlew assemblerelease
